{"version":3,"sources":["webpack:///./src/app/contactmanager/components/main-content/main-content.component.html","webpack:///./src/app/contactmanager/components/main-content/main-content.component.scss","webpack:///./src/app/contactmanager/components/main-content/main-content.component.ts","webpack:///./src/app/contactmanager/components/new-contact-dialog/new-contact-dialog.component.html","webpack:///./src/app/contactmanager/components/new-contact-dialog/new-contact-dialog.component.scss","webpack:///./src/app/contactmanager/components/new-contact-dialog/new-contact-dialog.component.ts","webpack:///./src/app/contactmanager/components/notes/notes.component.html","webpack:///./src/app/contactmanager/components/notes/notes.component.scss","webpack:///./src/app/contactmanager/components/notes/notes.component.ts","webpack:///./src/app/contactmanager/components/sidenav/sidenav.component.html","webpack:///./src/app/contactmanager/components/sidenav/sidenav.component.scss","webpack:///./src/app/contactmanager/components/sidenav/sidenav.component.ts","webpack:///./src/app/contactmanager/components/toolbar/toolbar.component.html","webpack:///./src/app/contactmanager/components/toolbar/toolbar.component.scss","webpack:///./src/app/contactmanager/components/toolbar/toolbar.component.ts","webpack:///./src/app/contactmanager/contactmanager-app.component.ts","webpack:///./src/app/contactmanager/contactmanager.module.ts","webpack:///./src/app/contactmanager/models/user.ts","webpack:///./src/app/contactmanager/services/user.service.ts"],"names":[],"mappings":"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","file":"contactmanager-contactmanager-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"!user\\\">\\n    <mat-spinner></mat-spinner>\\n</div>\\n<div *ngIf=\\\"user\\\">\\n<mat-card>\\n    <mat-card-header>\\n        <mat-icon mat-card-avatar svgIcon=\\\"{{user.avatar}}\\\"></mat-icon>\\n        <mat-card-title>\\n            <h2>\\n              {{ user.name }}\\n            </h2>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n            Birthday {{ user.birthDate | date: 'd LLLL'}}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n          <mat-tab-group>\\n              <mat-tab label=\\\"Bio\\\"> \\n                <p>\\n                  {{user.bio}}\\n                </p>\\n              </mat-tab>\\n             <mat-tab label=\\\"Notes\\\">\\n                <app-notes [notes]=\\\"user.notes\\\"></app-notes>\\n             </mat-tab>\\n            </mat-tab-group>\\n            \\n      </mat-card-content>\\n</mat-card>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RtYW5hZ2VyL2NvbXBvbmVudHMvbWFpbi1jb250ZW50L21haW4tY29udGVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\nimport { User } from '../../models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.scss']\n})\nexport class MainContentComponent implements OnInit {\n\n  user: User;\n  constructor(private route: ActivatedRoute, private service: UserService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n        let id = params['id'];\n        if(!id) id = 1;\n        \n        this.user = null;\n        this.service.users.subscribe(users => {\n            if(users.length == 0) return;\n            setTimeout(()=> {\n              this. user = this.service.userById(id);\n            }, 500);\n           \n        });\n       \n    });\n  }\n\n}\n","module.exports = \"<h2 mat-dialog-title>Add new contact</h2>\\n<mat-dialog-content>\\n    <div class=\\\"example-container\\\">\\n\\n           \\n        <mat-form-field>\\n            <mat-select placeholder=\\\"Avatar\\\" [(ngModel)]=\\\"user.avatar\\\">\\n              <mat-select-trigger>\\n                  <mat-icon svgIcon=\\\"{{user.avatar}}\\\">\\n                    \\n                  </mat-icon> {{user.avatar}}\\n              </mat-select-trigger>\\n              <mat-option *ngFor = \\\"let avatar of avatars\\\" [value]= \\\"avatar\\\">\\n                  <mat-icon svgIcon=\\\"{{avatar}}\\\">\\n                      \\n                  </mat-icon>{{avatar}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" required>\\n          <mat-error *ngIf=\\\"name.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Born\\\" [(ngModel)]=\\\"user.birthDay\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n          </mat-form-field>\\n          \\n        <mat-form-field>\\n          <textarea matInput placeholder=\\\"Bio\\\" [(ngModel)] = \\\"user.bio\\\"></textarea>\\n        </mat-form-field>\\n \\n      </div>\\n      \\n</mat-dialog-content>\\n<mat-dialog-actions>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">\\n       <mat-icon>save</mat-icon> Save\\n    </button>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"dismiss()\\\">\\n        <mat-icon>cancel</mat-icon> Cancel\\n     </button>\\n</mat-dialog-actions>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdG1hbmFnZXIvY29tcG9uZW50cy9uZXctY29udGFjdC1kaWFsb2cvQzpcXHByb2plY3RzXFxtb3ZpZWRlbW8vc3JjXFxhcHBcXGNvbnRhY3RtYW5hZ2VyXFxjb21wb25lbnRzXFxuZXctY29udGFjdC1kaWFsb2dcXG5ldy1jb250YWN0LWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYix1QkFBc0IsRUFDdkI7O0FBRUQ7RUFDRSxZQUFXLEVBQ1oiLCJmaWxlIjoic3JjL2FwcC9jb250YWN0bWFuYWdlci9jb21wb25lbnRzL25ldy1jb250YWN0LWRpYWxvZy9uZXctY29udGFjdC1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\nimport { User } from '../../models/user';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-new-contact-dialog',\n  templateUrl: './new-contact-dialog.component.html',\n  styleUrls: ['./new-contact-dialog.component.scss']\n})\nexport class NewContactDialogComponent implements OnInit {\n\n  name = new FormControl('', [Validators.required]);\n  avatars = [\n    'svg-1','svg-2','svg-3','svg-4'\n  ];\n  user: User;\n  constructor(private userService: UserService, \n    private dialogRef: MatDialogRef<NewContactDialogComponent>) { }\n\n  ngOnInit() {\n    this.user = new User();\n  }\n  save() {\n    this.userService.addUser(this.user).then(user => {\n      this.dialogRef.close(this.user);\n    })\n    \n  }\n  dismiss() {\n    this.dialogRef.close(null);\n  }\n  getErrorMessage() {\n    return this.name.hasError('required') ? 'You must enter a name' : ''\n       \n  }\n\n}\n","module.exports = \"<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" matSort>\\n\\n    \\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n  \\n    <!-- Position Column -->\\n\\n    <ng-container matColumnDef=\\\"position\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let note\\\"> {{note.id}} </td>\\n    </ng-container>\\n  \\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let note\\\"> {{note.title}} </td>\\n    </ng-container>\\n  \\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n      <td mat-cell *matCellDef=\\\"let note\\\"> {{note.date | date:'yyyy-MM-dd'}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  \\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  \\n  <!-- Copyright 2018 Google Inc. All Rights Reserved.\\n      Use of this source code is governed by an MIT-style license that\\n      can be found in the LICENSE file at http://angular.io/license -->\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdG1hbmFnZXIvY29tcG9uZW50cy9ub3Rlcy9DOlxccHJvamVjdHNcXG1vdmllZGVtby9zcmNcXGFwcFxcY29udGFjdG1hbmFnZXJcXGNvbXBvbmVudHNcXG5vdGVzXFxub3Rlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDWjs7QUFFRDtFQUNFLGdCQUFlO0VBQ2YsWUFBVyxFQUNaIiwiZmlsZSI6InNyYy9hcHAvY29udGFjdG1hbmFnZXIvY29tcG9uZW50cy9ub3Rlcy9ub3Rlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Note } from '../../models/note';\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.scss']\n})\nexport class NotesComponent implements OnInit {\n\n  @Input() notes: Note[];\n  \n  displayedColumns: string[] = ['position', 'title', 'date'];\n\n  @ViewChild(MatSort) sort: MatSort;\n \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource:any;\n  constructor() { }\n\n  ngOnInit() {\n    debugger;\n   // this.dataSource = this.notes;\n   this.dataSource = new MatTableDataSource<Note>(this.notes);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"<mat-drawer-container class=\\\"app-container\\\" autosize>\\n  <mat-drawer #sidenav class=\\\"app-sidenav mat-elevation-z10\\\" [mode]=\\\"isScreenSmall() ? 'over' : 'side'\\\" [opened]=\\\"!isScreenSmall()\\\" >\\n    <mat-toolbar color=\\\"primary\\\">Contacts</mat-toolbar>\\n    <mat-nav-list>\\n        <mat-list-item *ngFor=\\\"let user of users | async\\\">\\n           <a matLine [routerLink]=\\\"['/contactmanager', user.id]\\\">\\n              <mat-icon svgIcon=\\\"{{user.avatar}}\\\"></mat-icon>{{ user.name }}\\n           </a>\\n        </mat-list-item>\\n      </mat-nav-list>\\n\\n  </mat-drawer>\\n\\n  <div class=\\\"app-sidenav-content\\\">\\n      <app-toolbar (toggleSidenav) = \\\"sidenav.toggle()\\\" ></app-toolbar>\\n      <div class=\\\"wrapper\\\">\\n          <router-outlet></router-outlet>\\n      </div>\\n  </div>\\n\\n</mat-drawer-container>\\n\\n\\n\"","module.exports = \".app-container {\\n  flex: 1;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  min-width: 100%;\\n  min-height: 100%; }\\n\\n.app-sidenav-content {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column; }\\n\\n.app-sidenav {\\n  width: 240px; }\\n\\n.wrapper {\\n  margin: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdG1hbmFnZXIvY29tcG9uZW50cy9zaWRlbmF2L0M6XFxwcm9qZWN0c1xcbW92aWVkZW1vL3NyY1xcYXBwXFxjb250YWN0bWFuYWdlclxcY29tcG9uZW50c1xcc2lkZW5hdlxcc2lkZW5hdi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNLLFFBQU87RUFDUCxnQkFBZTtFQUNoQixZQUFXO0VBQ1gsYUFBWTtFQUNaLGdCQUFlO0VBQ2YsaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsY0FBYTtFQUNiLGFBQVk7RUFDWix1QkFBc0IsRUFDdkI7O0FBRUQ7RUFDRyxhQUFZLEVBQ2Q7O0FBQ0Q7RUFDRSxhQUFZLEVBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb250YWN0bWFuYWdlci9jb21wb25lbnRzL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtY29udGFpbmVyIHtcclxuICAgICBmbGV4OiAxO1xyXG4gICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgbWluLWhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmFwcC1zaWRlbmF2LWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIC5hcHAtc2lkZW5hdiB7XHJcbiAgICAgd2lkdGg6IDI0MHB4O1xyXG4gIH1cclxuICAud3JhcHBlciB7XHJcbiAgICBtYXJnaW46IDUwcHg7XHJcbiAgfVxyXG4gICJdfQ== */\"","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../../models/user';\nimport { Router } from '@angular/router';\nimport { MatSidenav, MatDrawer } from '@angular/material';\n\nconst SMALL_WIDTH_BREAKPOINT = 720;\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  private mediaMatcher: MediaQueryList = matchMedia(`(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`)\n  users: Observable<User[]>;\n\n  @ViewChild(MatDrawer) sidenav: MatDrawer;\n\n  constructor(zone: NgZone, private userService: UserService, private router: Router) { \n\n    this.mediaMatcher.addListener( mql => {\n      zone.run(() => {});\n    });\n  }\n\n  ngOnInit() {\n       this.users = this.userService.users;\n       this.userService.loadAll();\n\n       this.router.events.subscribe(() => {\n            if(this.isScreenSmall()){\n                this.sidenav.close();\n            }\n       });\n  }\n  isScreenSmall(): boolean{\n    return this.mediaMatcher.matches;\n  }\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <button type=\\\"button\\\" mat-button (click)=\\\"toggleSidenav.emit()\\\" class=\\\"sidenav-toggle\\\" >\\n         <mat-icon>\\n           menu\\n         </mat-icon>\\n      </button>  \\n  <span>Contact Manager</span>\\n  <span class=\\\"example-spacer\\\"></span>\\n\\n  <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\n      <mat-icon>more_vert</mat-icon>\\n  </button>\\n<mat-menu #menu=\\\"matMenu\\\">\\n  <button mat-menu-item (click)=\\\"openAddContactDialog()\\\" >New Contact</button>\\n</mat-menu>\\n\\n\\n</mat-toolbar>\\n\"","module.exports = \".sidenav-toggle {\\n  display: none;\\n  padding: 0;\\n  margin: 8px;\\n  min-width: 56px; }\\n  @media (max-width: 720px) {\\n    .sidenav-toggle {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center; } }\\n  .sidenav-toggle mat-icon {\\n    font-size: 30px;\\n    height: 56px;\\n    width: 56px;\\n    line-height: 56px;\\n    color: white; }\\n  .example-icon {\\n  padding: 0 14px; }\\n  .example-spacer {\\n  flex: 1 1 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdG1hbmFnZXIvY29tcG9uZW50cy90b29sYmFyL0M6XFxwcm9qZWN0c1xcbW92aWVkZW1vL3NyY1xcYXBwXFxjb250YWN0bWFuYWdlclxcY29tcG9uZW50c1xcdG9vbGJhclxcdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGNBQVk7RUFFWixXQUFVO0VBQ1YsWUFBVztFQUNYLGdCQVBZLEVBcUJmO0VBWkc7SUFQSjtNQVFRLGNBQWE7TUFDYixvQkFBbUI7TUFDbkIsd0JBQXVCLEVBUzlCLEVBQUE7RUFuQkQ7SUFhUSxnQkFBZTtJQUNmLGFBaEJRO0lBaUJSLFlBakJRO0lBa0JSLGtCQWxCUTtJQW1CUixhQUFZLEVBQ2Y7RUFFTDtFQUNJLGdCQUFlLEVBQ2hCO0VBRUQ7RUFDRSxlQUFjLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb250YWN0bWFuYWdlci9jb21wb25lbnRzL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRpY29uV2lkdGg6IDU2cHg7XHJcblxyXG4uc2lkZW5hdi10b2dnbGUge1xyXG4gICAgZGlzcGxheTpub25lO1xyXG5cclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDhweDtcclxuICAgIG1pbi13aWR0aDogJGljb25XaWR0aDtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3MjBweCl7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgbWF0LWljb257XHJcbiAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgIGhlaWdodDogJGljb25XaWR0aDtcclxuICAgICAgICB3aWR0aDogJGljb25XaWR0aDtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGljb25XaWR0aDtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbn1cclxuLmV4YW1wbGUtaWNvbiB7XHJcbiAgICBwYWRkaW5nOiAwIDE0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLXNwYWNlciB7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxuICB9Il19 */\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MatDialog, MatSnackBar, MatSnackBarRef, SimpleSnackBar } from '@angular/material';\nimport { NewContactDialogComponent } from '../new-contact-dialog/new-contact-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  @Output() toggleSidenav = new EventEmitter<void>();\n  \n  constructor(private dialog: MatDialog, \n    public snackBar: MatSnackBar,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n  openAddContactDialog():void{\n     let dialogRef = this.dialog.open(NewContactDialogComponent,{\n        width: '450px'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n           console.log('The dailog closed', result);\n\n           if(result) {\n              this.openSnackBar(\"Contact added\", \"Navigate\")\n                 .onAction().subscribe(() => {\n                    this.router.navigate(['/contactmanager', result.id]);\n                 });\n           }\n      })\n  }\n  openSnackBar(message: string, action: string) : MatSnackBarRef<SimpleSnackBar> {\n    return this.snackBar.open(message, action, {\n      duration: 5000,\n    });\n  }\n \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry, MatIcon } from '@angular/material'\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-contactmanager-app',\n  template: `\n   <app-sidenav></app-sidenav>\n  `,\n  styles: []\n})\nexport class ContactmanagerAppComponent implements OnInit {\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) { \n     iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/avatars.svg'));\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { MaterialModule } from '../shared/material.module'\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ContactmanagerAppComponent } from './contactmanager-app.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { MainContentComponent } from './components/main-content/main-content.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserService } from './services/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NotesComponent } from './components/notes/notes.component';\nimport { NewContactDialogComponent } from './components/new-contact-dialog/new-contact-dialog.component';\n\nconst routes: Routes = [\n  {path: '', component: ContactmanagerAppComponent,\n    children: [\n          { path: ':id', component: MainContentComponent},\n         { path: '', component: MainContentComponent}\n    ]},\n  {path: '**', redirectTo:''}\n \n ];\n \n@NgModule({\n  declarations: [ContactmanagerAppComponent, ToolbarComponent, MainContentComponent, SidenavComponent, NotesComponent, NewContactDialogComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  providers:[\n    UserService\n  ],\n  entryComponents:[\n    NewContactDialogComponent\n  ]\n})\nexport class ContactmanagerModule { }\n","import { Note } from './note';\n\nexport class User {\n    id: number;\n    birthDate: Date;\n    name: string;\n    avatar: string;\n    bio: string;\n    notes: Note[] = []\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { resolve } from 'q';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private _users: BehaviorSubject<User[]>;\n  \n   private dataStore: {\n     users: User[]\n   }\n  constructor(private http: HttpClient) { \n    this.dataStore = { users: [] }\n    this._users = new BehaviorSubject<User[]>([]);\n  }\n  get users(): Observable<User[]> {\n    return this._users.asObservable();\n  }\n  addUser(user: User) : Promise<User> {\n    return new Promise((resolver, reject) => {\n      user.id = this.dataStore.users.length + 1;\n      this.dataStore.users.push(user);\n      this._users.next(Object.assign({}, this.dataStore).users);\n        resolver(user);\n    });\n  }\n  loadAll() {\n    const usersUrl = 'https://angular-material-api.azurewebsites.net/users';\n\n    return this.http.get<User[]>(usersUrl)\n       .subscribe(data => {\n          this.dataStore.users = data;\n          this._users.next(Object.assign({}, this.dataStore).users);\n       }, error => {\n          console.log(\"Failed to fetch users\");\n       });\n  }\n  userById(id: number){\n    return this.dataStore.users.find(x => x.id == id);\n  }\n}\n"],"sourceRoot":""}